syntax = "proto3";

package battery;

service PowerSupplyService {
    rpc GetPowerSupplyInfo(Empty) returns (GetPowerSupplyInfoResponse) {}
    rpc SetDevice(SetDeviceRequest) returns (Empty) {}
    rpc GetDevice(Empty) returns (GetDeviceResponse) {}
    rpc GetCurrent(Empty) returns (GetCurrentResponse) {}
}

message Empty {}

message SetDeviceRequest {
    string device_path = 1;
}

message GetPowerSupplyInfoResponse {
    string name = 1;                  // The name of the power supply
    string type = 2;                  // The type of power supply (e.g., battery, AC)
    string status = 3;                // The status of the power supply (e.g., charging, discharging)
    bool present = 4;                 // Whether the power supply is present or not
    uint32 voltage_now = 5;           // The current voltage in millivolts
    int32 current_now = 6;            // The current current in microamperes
    string capacity = 7;               // The current capacity as a percentage (0-100)
    string capacity_level = 8;        // The capacity level (e.g., low, normal)
    int32 temp = 9;                   // The temperature in tenths of a degree Celsius
    string technology = 10;           // The technology used by the power supply
    uint32 charge_full = 11;          // The full charge capacity in microampere-hours
    uint32 charge_now = 12;           // The current charge in microampere-hours
    uint32 charge_full_design = 13;   // The design capacity in microampere-hours
    string manufacturer = 14;         // The manufacturer of the power supply
}

message GetDeviceResponse {
    string device_path = 1;
}

message GetCurrentResponse {
    int64 current_value = 1;
}
